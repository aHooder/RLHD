import org.gradle.internal.os.OperatingSystem

plugins {
	id 'java'
//	id 'com.github.johnrengelman.shadow' version '6.1.0'
}

repositories {
	mavenLocal()
	maven { url 'https://repo.runelite.net' }
	mavenCentral()
}

def runeLiteVersion = '1.10.+'
def lwjglVersion = '3.3.2'

// Used to pick appropriate natives for test builds
switch (OperatingSystem.current()) {
	case OperatingSystem.LINUX:
		def osArch = System.getProperty("os.arch")
		project.ext.lwjglNatives = osArch.startsWith("arm") || osArch.startsWith("aarch64")
			? "natives-linux-${osArch.contains("64") || osArch.startsWith("armv8") ? "arm64" : "arm32"}"
			: "natives-linux"
		break
	case OperatingSystem.MAC_OS:
		project.ext.lwjglNatives = System.getProperty("os.arch").startsWith("aarch64") ? "natives-macos-arm64" : "natives-macos"
		break
	case OperatingSystem.WINDOWS:
		def osArch = System.getProperty("os.arch")
		project.ext.lwjglNatives = osArch.contains("64")
			? "natives-windows${osArch.startsWith("aarch64") ? "-arm64" : ""}"
			: "natives-windows-x86"
		break
}

dependencies {
	compileOnly group: 'net.runelite', name: 'client', version: runeLiteVersion

	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	testImplementation 'junit:junit:4.13.2'
	testImplementation 'org.mockito:mockito-core:3.1.0'
	testImplementation group: 'net.runelite', name: 'client', version: runeLiteVersion
	testImplementation group: 'net.runelite', name: 'jshell', version: runeLiteVersion

	testCompileOnly 'org.projectlombok:lombok:1.18.20'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

	testImplementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")
	testImplementation "org.lwjgl:lwjgl"
	testImplementation "org.lwjgl:lwjgl-assimp"
	testRuntimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
	testRuntimeOnly "org.lwjgl:lwjgl-assimp::$lwjglNatives"
}

group = 'rs117.hd'
version = '1.3.3'
sourceCompatibility = '11'

tasks.withType(JavaCompile).configureEach {
	options.encoding = 'UTF-8'
}

//shadowJar {
//	from sourceSets.test.output
//	configurations = [project.configurations.testRuntimeClasspath]
//	manifest {
//		attributes 'Main-Class': 'rs117.hd.HdPluginTest'
//	}
//}
